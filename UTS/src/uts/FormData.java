package uts;

import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
 //penambahan library
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author Andalas Maulana
 */
public class FormData extends javax.swing.JFrame {

    /**
     * Creates new form FormData
     */
    Connection con = null;
    Statement stm,stat;
    ResultSet rs;
    PreparedStatement pst = null;
    public FormData() throws SQLException {
        initComponents();
        Koneksi();
        ComboJab();
        ComboSts();
        ComboProd();
        ComboGen();
        datatoTable();
        refreshTable();
       
    }
    
    public void ComboJab(){
        try{
            Statement stat = con.createStatement();
            String sql ="select kode_jabatan from jabatan order by kode_jabatan asc";
            ResultSet rs = stat.executeQuery(sql);
            
            while(rs.next()){
//                Object[] ob = new Object [1];
//                ob[0] = rs.getString(1);
                
                CJabatan.addItem(rs.getString("kode_jabatan"));
            }
            rs.close();
            stat.close();
        }catch(SQLException e){
            
        }
    }
    public void ComboSts(){
        try{
            Statement stat = con.createStatement();
            String sql ="select kode_status from status order by kode_status asc";
            ResultSet rs = stat.executeQuery(sql);
            
            while(rs.next()){
//                Object[] ob = new Object [1];
//                ob[0] = rs.getString(1);
                
                CStatus.addItem(rs.getString("kode_status"));
            }
            rs.close();
            stat.close();
        }catch(SQLException e){
            
        }
    }
    public void ComboProd(){
        try{
            Statement stat = con.createStatement();
            String sql ="select kode_prodi from prodi order by kode_prodi asc";
            ResultSet rs = stat.executeQuery(sql);
            
            while(rs.next()){
//                Object[] ob = new Object [1];
//                ob[0] = rs.getString(1);
                
                CProdi.addItem(rs.getString("kode_prodi"));
            }
            rs.close();
            stat.close();
        }catch(SQLException e){
            
        }
    }
    
      public void ComboGen() {
          try{
            Statement stat = con.createStatement();
            String sql ="select kode_gender from gender order by kode_gender asc";
            ResultSet rs = stat.executeQuery(sql);
            
            while(rs.next()){
//                Object[] ob = new Object [1];
//                ob[0] = rs.getString(1);
                
                CGender.addItem(rs.getString("kode_gender"));
            }
            rs.close();
            stat.close();
        }catch(SQLException e){
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        kodeK = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        alamat = new javax.swing.JTextField();
        tgl = new javax.swing.JTextField();
        tlp = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        CJabatan = new javax.swing.JComboBox<>();
        CStatus = new javax.swing.JComboBox<>();
        CProdi = new javax.swing.JComboBox<>();
        simpan = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        batal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tampil = new javax.swing.JTable();
        CGender = new javax.swing.JComboBox<>();
        segarkan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("DATA KARYAWAN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(305, 305, 305))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Kode Karyawan");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nama");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Alamat");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Tanggal Lahir");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Gender");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Telepon");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Email");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Kode Jabatan");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Kode Status");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Kode Prodi");

        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        batal.setText("Kembali");
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });

        tampil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tampil);

        CGender.setSelectedItem(null);

        segarkan.setText("Segarkan");
        segarkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segarkanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CGender, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(kodeK, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(segarkan, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tlp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CJabatan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CProdi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(batal, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(kodeK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tlp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(CProdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(segarkan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        deleteData();
    }//GEN-LAST:event_hapusActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        // TODO add your handling code here:
        dispose();
        new menuUtama().setVisible(true);
    }//GEN-LAST:event_batalActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        try {
            rs = stat.executeQuery("SELECT * FROM karyawan where kode_karyawan = '"+kodeK.getText()+"'");
            if(rs.next())
            {
                update();
            }else{
                Masukan();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_simpanActionPerformed

    private void segarkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segarkanActionPerformed
        refreshTable();
    }//GEN-LAST:event_segarkanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormData().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(FormData.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CGender;
    private javax.swing.JComboBox<String> CJabatan;
    private javax.swing.JComboBox<String> CProdi;
    private javax.swing.JComboBox<String> CStatus;
    private javax.swing.JTextField alamat;
    private javax.swing.JButton batal;
    private javax.swing.JTextField email;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kodeK;
    private javax.swing.JTextField nama;
    private javax.swing.JButton segarkan;
    private javax.swing.JButton simpan;
    private javax.swing.JTable tampil;
    private javax.swing.JTextField tgl;
    private javax.swing.JTextField tlp;
    // End of variables declaration//GEN-END:variables
    private void Koneksi(){
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con=DriverManager.getConnection("jdbc:mysql://localhost/absen_k", "root", "");
        stat=con.createStatement();
        } catch (ClassNotFoundException | SQLException e) {
        JOptionPane.showMessageDialog(null, e);
        }
    }
    private void datatoTable() throws SQLException {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Kode Karyawan");
    model.addColumn("Nama");
    model.addColumn("Alamat");
    model.addColumn("Tanggal Lahir");
    model.addColumn("Telepon");
    model.addColumn("Email");
    model.addColumn("Kode Jabatan");
    model.addColumn("Kode Status");
    model.addColumn("Kode Prodi");
    model.addColumn("Gender");

// Mengambil data dari database dan menampilkannya dalam tabel
try {
    String sql = "SELECT * FROM karyawan";
    Connection con = Koneksi.getKoneksi();
    PreparedStatement ps = con.prepareStatement(sql);
    ResultSet rs = ps.executeQuery();
    while(rs.next()) {
        model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10)});
    }
    aturKolom();
    tampil.setModel(model);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mengambil data: " + e.getMessage());
        e.printStackTrace(); // Ini akan mencetak stack trace untuk memperoleh informasi yang lebih baik tentang kesalahan
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
        e.printStackTrace();
    }
    
}

    private void refreshTable() {
                try {
        // Query SQL untuk mengambil data terbaru dari tabel karyawan
        String sql = "SELECT * FROM karyawan";
        PreparedStatement pst = con.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();

        // Buat objek DefaultTableModel untuk menyimpan data dari ResultSet
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Karyawan");
        model.addColumn("Nama");
        model.addColumn("Alamat");
        model.addColumn("Tanggal Lahir");
        model.addColumn("Telepon");
        model.addColumn("Email");
        model.addColumn("Kode Jabatan");
        model.addColumn("Kode Status");
        model.addColumn("Kode Prodi");
        model.addColumn("Kode Gender");

        // Tambahkan data dari ResultSet ke dalam model tabel
        while (rs.next()) {
            Object[] row = new Object[10];
            for (int i = 0; i < 10; i++) {
                row[i] = rs.getString(i + 1);
            }
            model.addRow(row);
        }

        // Set model tabel baru ke dalam JTable
        tampil.setModel(model);

        // Tutup ResultSet dan PreparedStatement
        rs.close();
        pst.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam mengambil data dari database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }

    private void deleteData() {
            try {
    String kodeKaryawan = kodeK.getText();

    // Pastikan kode karyawan tidak kosong
    if (kodeKaryawan.isEmpty()) {
        throw new IllegalArgumentException("Silakan masukkan kode karyawan yang ingin dihapus.");
    }

    // Meminta konfirmasi dari pengguna sebelum menghapus data
    int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        // Query SQL untuk menghapus data dari tabel karyawan
        String sql = "DELETE FROM karyawan WHERE kode_karyawan=?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, kodeKaryawan);

        // Eksekusi query untuk menghapus data
        int rowsAffected = pst.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus.");
            refreshTable(); // Refresh tabel setelah data dihapus
        } else {
            JOptionPane.showMessageDialog(null, "Gagal menghapus data. Kode karyawan tidak ditemukan.");
        }
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam operasi database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
} catch (IllegalArgumentException e) {
    JOptionPane.showMessageDialog(this, "Kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

  }

    private void Masukan() {
        try {
    String sql = "INSERT INTO karyawan (kode_karyawan, nama, alamat, tgl_lahir, kode_gender, tlp, email, kode_jabatan, kode_status, kode_prodi, date_create) VALUES ('"+kodeK.getText()+"','"+nama.getText()+"','"+alamat.getText()+"','"+tgl.getText()+"','"+CGender.getSelectedItem()+"','"+tlp.getText()+"','"+email.getText()+"','"+CJabatan.getSelectedItem()+"','"+CStatus.getSelectedItem()+"','"+CProdi.getSelectedItem()+"',NOW())";
    stat.executeUpdate(sql);
    JOptionPane.showMessageDialog(null, "Berhasil masuk");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    refreshTable();
}

    private void update() {
        try {
            String sql = "UPDATE karyawan SET nama=?, alamat=?, tgl_lahir=?, kode_gender=?, tlp=?, email=?, kode_status=?, kode_jabatan=?, kode_prodi=?, date_modify=NOW() WHERE kode_karyawan=?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, nama.getText());
            pst.setString(2, alamat.getText());
            pst.setString(3, tgl.getText());
            pst.setString(4, CGender.getSelectedItem().toString()); // Ubah ke toString() untuk mendapatkan nilai string dari ComboBox
            pst.setString(5, tlp.getText());
            pst.setString(6, email.getText());
            pst.setString(7, CStatus.getSelectedItem().toString()); // Ubah ke toString() untuk mendapatkan nilai string dari ComboBox
            pst.setString(8, CJabatan.getSelectedItem().toString()); // Ubah ke toString() untuk mendapatkan nilai string dari ComboBox
            pst.setString(9, CProdi.getSelectedItem().toString()); // Ubah ke toString() untuk mendapatkan nilai string dari ComboBox
            pst.setString(10, kodeK.getText());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "update berhasil");
            refreshTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void aturKolom() {
    TableColumnModel columnModel = tampil.getColumnModel();
    int jumlahKolom = columnModel.getColumnCount();
    
    for (int i = 0; i < jumlahKolom; i++) {
    columnModel.getColumn(i).setPreferredWidth(130); // Kolom "Kode Karyawan"
    columnModel.getColumn(i).setPreferredWidth(150); // Kolom "Nama"
    columnModel.getColumn(i).setPreferredWidth(200); // Kolom "Alamat"
    columnModel.getColumn(i).setPreferredWidth(120); // Kolom "Tanggal Lahir"
    columnModel.getColumn(i).setPreferredWidth(120); // Kolom "Telepon"
    columnModel.getColumn(i).setPreferredWidth(200); // Kolom "Email"
    columnModel.getColumn(i).setPreferredWidth(100); // Kolom "Kode Jabatan"
    columnModel.getColumn(i).setPreferredWidth(100); // Kolom "Kode Status"
    columnModel.getColumn(i).setPreferredWidth(100); // Kolom "Kode Prodi"
    columnModel.getColumn(i).setPreferredWidth(80);  // Kolom "Gender"
            }   
    }
}